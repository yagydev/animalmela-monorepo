#!/bin/bash

# Fix MongoDB Connection for Production Deployment
# This script helps fix the 503 error on kisaanmela.com

echo "üîß Fixing MongoDB Connection for Production..."

# Check if we're in the right directory
if [ ! -f "docker-compose.prod.yml" ]; then
    echo "‚ùå Error: Please run this script from the project root directory"
    exit 1
fi

echo "üìã Current Status:"
echo "‚úÖ Database connection configuration updated"
echo "‚úÖ Production environment variables updated"
echo "‚úÖ Demo mode enhanced with multiple test users"
echo "‚úÖ Login API improved with better error handling"

echo ""
echo "üöÄ Next Steps to Deploy:"
echo ""
echo "1. Commit and push changes:"
echo "   git add ."
echo "   git commit -m 'Fix MongoDB connection for production'"
echo "   git push origin main"
echo ""
echo "2. Deploy to production server:"
echo "   # If using Docker Compose:"
echo "   docker-compose -f docker-compose.prod.yml down"
echo "   docker-compose -f docker-compose.prod.yml up -d --build"
echo ""
echo "   # If using deployment script:"
echo "   ./deploy-kisaanmela.sh"
echo ""
echo "3. Test the login API:"
echo "   curl -X POST https://www.kisaanmela.com/api/login \\"
echo "        -H 'Content-Type: application/json' \\"
echo "        -d '{\"email\":\"demo@kisaanmela.com\",\"password\":\"demo123\"}'"
echo ""
echo "üéØ Demo Users Available:"
echo "   ‚Ä¢ demo@kisaanmela.com / demo123 (farmer)"
echo "   ‚Ä¢ admin@kisaanmela.com / admin123 (admin)"
echo "   ‚Ä¢ buyer@kisaanmela.com / buyer123 (buyer)"
echo "   ‚Ä¢ seller@kisaanmela.com / seller123 (seller)"
echo ""
echo "üìä What was fixed:"
echo "   ‚Ä¢ MongoDB connection string for Docker production setup"
echo "   ‚Ä¢ Environment variables for production deployment"
echo "   ‚Ä¢ Enhanced demo mode with multiple test users"
echo "   ‚Ä¢ Better error messages and logging"
echo ""
echo "‚úÖ Ready to deploy! Run the commands above to update kisaanmela.com"
