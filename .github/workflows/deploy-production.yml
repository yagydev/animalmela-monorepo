name: Deploy Kisaan Mela to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'production'
        type: choice
        options:
        - production
        - staging

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    name: Test and Build

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: |
        npm install --legacy-peer-deps

    - name: Run tests
      run: |
        npm run test

    - name: Build applications
      run: |
        npm run build

    - name: Create deployment package
      run: |
        echo "🚀 Creating deployment package for Kisaan Mela..."
        
        # Create deployment directory
        mkdir -p deployment-package
        
        # Copy essential files
        cp -r backend deployment-package/
        cp -r web-frontend deployment-package/
        cp -r shared deployment-package/
        cp -r nginx deployment-package/
        cp docker-compose.prod.yml deployment-package/
        cp env.production deployment-package/
        cp deploy-kisaanmela.sh deployment-package/
        cp package.json deployment-package/
        cp README.md deployment-package/
        
        # Create deployment archive
        tar -czf kisaanmela-production-$(date +%Y%m%d-%H%M%S).tar.gz deployment-package/
        
        echo "✅ Deployment package created successfully!"

    - name: Upload deployment artifact
      uses: actions/upload-artifact@v4
      with:
        name: kisaanmela-production-package
        path: kisaanmela-production-*.tar.gz
        retention-days: 30

  deploy-notification:
    needs: test-and-build
    runs-on: ubuntu-latest
    name: Deployment Ready Notification

    steps:
    - name: Deployment success notification
      run: |
        echo "🎉 KISAAN MELA DEPLOYMENT READY!"
        echo "=================================="
        echo ""
        echo "✅ Tests passed"
        echo "✅ Build completed successfully"
        echo "✅ Deployment package created"
        echo ""
        echo "🌐 Your Kisaan Mela platform is ready to deploy to:"
        echo "   • Main site: https://kisaanmela.com"
        echo "   • API: https://api.kisaanmela.com"
        echo ""
        echo "📦 Deployment Options:"
        echo ""
        echo "1. 🚀 AUTOMATIC DEPLOYMENT (if server configured):"
        echo "   • Download the deployment package from GitHub Actions artifacts"
        echo "   • Extract on your server"
        echo "   • Run: ./deploy-kisaanmela.sh"
        echo ""
        echo "2. 🐳 DOCKER DEPLOYMENT:"
        echo "   • git clone https://github.com/yagydev/animalmela-monorepo.git"
        echo "   • cd animalmela-monorepo"
        echo "   • docker-compose -f docker-compose.prod.yml up -d"
        echo ""
        echo "3. ☁️ CLOUD DEPLOYMENT:"
        echo "   • Deploy to Vercel: npx vercel --prod"
        echo "   • Deploy to Heroku: git push heroku main"
        echo "   • Deploy to Railway: railway deploy"
        echo ""
        echo "🔧 Server Requirements:"
        echo "   • Docker & Docker Compose installed"
        echo "   • Domain pointed to server IP"
        echo "   • SSL certificate configured"
        echo "   • Environment variables set"
        echo ""
        echo "📋 Post-Deployment Checklist:"
        echo "   □ Test website at https://kisaanmela.com"
        echo "   □ Test API at https://api.kisaanmela.com/api/health"
        echo "   □ Verify database connection"
        echo "   □ Check SSL certificate"
        echo "   □ Test user registration/login"
        echo "   □ Test marketplace functionality"
        echo ""
        echo "🎯 Status: READY FOR PRODUCTION! 🇮🇳"

  create-release:
    needs: test-and-build
    runs-on: ubuntu-latest
    name: Create Release
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Generate release notes
      run: |
        echo "# Kisaan Mela Production Release $(date +%Y.%m.%d)" > release-notes.md
        echo "" >> release-notes.md
        echo "## 🚀 Features" >> release-notes.md
        echo "- Complete livestock trading platform" >> release-notes.md
        echo "- User authentication and profiles" >> release-notes.md
        echo "- Marketplace with listings and search" >> release-notes.md
        echo "- Order management system" >> release-notes.md
        echo "- Chat functionality" >> release-notes.md
        echo "- Service provider network" >> release-notes.md
        echo "- Mobile-responsive design" >> release-notes.md
        echo "" >> release-notes.md
        echo "## 🛠️ Technical Stack" >> release-notes.md
        echo "- Frontend: Next.js + React + Tailwind CSS" >> release-notes.md
        echo "- Backend: Node.js + Next.js API Routes" >> release-notes.md
        echo "- Database: MongoDB" >> release-notes.md
        echo "- Authentication: JWT" >> release-notes.md
        echo "- Deployment: Docker + Docker Compose" >> release-notes.md
        echo "" >> release-notes.md
        echo "## 🌐 Deployment" >> release-notes.md
        echo "This release is production-ready for kisaanmela.com" >> release-notes.md
        echo "" >> release-notes.md
        echo "### Quick Deploy:" >> release-notes.md
        echo '```bash' >> release-notes.md
        echo "git clone https://github.com/yagydev/animalmela-monorepo.git" >> release-notes.md
        echo "cd animalmela-monorepo" >> release-notes.md
        echo "chmod +x deploy-kisaanmela.sh" >> release-notes.md
        echo "./deploy-kisaanmela.sh" >> release-notes.md
        echo '```' >> release-notes.md

    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v$(date +%Y.%m.%d-%H%M)
        release_name: Kisaan Mela Production Release $(date +%Y.%m.%d)
        body_path: release-notes.md
        draft: false
        prerelease: false
