version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:latest
    container_name: kisaanmela-mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: kisaanmela
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - kisaanmela-network

  # Redis Cache
  redis:
    image: redis:alpine
    container_name: kisaanmela-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - kisaanmela-network

  # Backend API
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: kisaanmela-backend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/kisaanmela?authSource=admin
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-super-secret-jwt-key-for-local-testing
      - NEXTAUTH_SECRET=your-nextauth-secret-for-local-testing
      - PORT=5000
    ports:
      - "5000:5000"
    depends_on:
      - mongodb
      - redis
    networks:
      - kisaanmela-network
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Web App
  frontend:
    build:
      context: .
      dockerfile: web-frontend/Dockerfile
    container_name: kisaanmela-frontend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://localhost:5000/api
      - PORT=3000
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - kisaanmela-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  kisaanmela-network:
    driver: bridge
